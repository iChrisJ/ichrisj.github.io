[{"title":"Local Event Website Environment for Dynamics Marketing","date":"2022-10-06T17:34:07.000Z","date_formatted":{"ll":"Oct 6, 2022","L":"10/06/2022","MM-DD":"10-06"},"updated":"2022-10-08T15:29:06.470Z","content":"In Dynamics Marketing, the event management feature helps you to organize, manage, and process the events. When you install the event management solution, you get an event portal that gives the users a web application where they can get to know more about the event details.\nEvent Portal is not like other types of Portals using Portal Editor in https://make.powerapps.com, or updating configuration records in Dataverse to change the UI and add functionalities. It doesn’t mean those ways totally do not work, but not the recommended ways. Event Portal is built using the Angular framework, so you need to have some knowledge of Angular to customize it. Here let’s set up a local Event Portal development environment and how push changes to Event Portal.\n1. Set up an Angular environment\nTo install Angular on your local system, you need the following:\n\nInstall Node.js version 10.x or higher.\nOpen Command Prompt or Windows PowerShell and run the command to check whether the installation was successful.1node -v\n\nRun the command to install the Angular CLI (command-line interface) required to build and run the Angular application.1npm install -g @angular/cli\n\n[!NOTE]\nOn Windows client computers, the execution of PowerShell scripts is disabled by default. To allow the execution of PowerShell scripts, which is needed for npm global binaries, you must set the following execution policy:\n1Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned\n\n\nMake sure you have an IDE to develop Angular website. Visual Studio Code is a good option. You can install and use it develop your application, but not mandatory.\n\n2. Download the sample code\n\nDownload the latest source code for the sample event website\nExtract the code onto somewhere and open the “release” folder in VS Code.\n\nBack to the Command Prompt or PowerShell, and navigate to “release” folder where the source code is downloaded, run the command npm install to fetch all the necessary packages required to run the website. 1npm install\n\n\n3. Power Apps Portal hosted event website\nThere are some differences of event website hosted on Event Portal or Self-hosted. If an Event Portal is provisioned for the Dynamics Marketing environment, we can customize the website locally, then push the changes to the Event Portal.\n\n\nOnce the “release” folder is opened in the VS Code, please copy all content from environment.d365.ts to environment.ts in src\\environments\\ folder.\n\n\nOnce copied, please update the apiEndpoint to the Event Portal url.\n\n\n[!NOTE]\nMake sure the trailing slash / is at the end of the URL\nIf the Event Portal is configured the custom domain, please use the custom url instead.\n\n\n\nGo the Portal Management app in the Marketing environment, create a Site Setting record with Name as HTTP/Access-Control-Allow-Origin and Value as https://localhost:4200\n\n\n\nBack to the Command Prompt or Windows PowerShell and run the command from the root directory to build and locally serve the website.\n 1ng serve --ssl\n\n\n\nAccess https://localhost:4200 in browser to open the website. Now you can update the source code in VS Code, then see the change reflect in the website.\n\n\nDeploy the changes to Event Portal.\n\nOnce you complete the customizations in source code, you want push the changes to the Event Portal, please run the script Scripts\\DeployToDynamics365Instance.ps1 in PowerShell.\nThe script will build the source code first, then pop up an Interactive Login for you to login the Dataverse environment.\nAfter login, select the target environment, then the changes will be pushed to the environment.\n\n\n\n\nAfterwards, the customizations will be reflected in the Event Portal. (Clear cache if the customizations don’t show in time.)\n\n\n4. Self-hosted event website\nIf no Event Portal provisioned for the Dynamics Marketing environment, you can also set up the local event to customize the event website, but you need manually deploy the code to IIS, Azure Web App, etc.\n\nOnce the “release” folder is opened in the VS Code, please copy all content from environment.selfhosted.ts to environment.ts in src\\environments\\ folder.\nOpen the Marketing environment, navigate to Settings &gt; Event management &gt; Web applications from SiteMap.\nTry to create a Web application record for local testing, set the Origin to http://localhost:4200 which we will launch the website in the URL by default. Save the record, then the values of Token and Endpoint will be generated automatically. Copy the values.\n\nGo back to the environment.ts in VS Code and update apiEndpoint with value from Endpoint and set emApplicationtoken to the value of Token\n\nGo back to the Command Prompt or Windows PowerShell and run the command from the root directory to build and locally serve the website. 1ng serve\n\nAccess http://localhost:4200 in browser to open the website.\n\n\n[!TIP]\nIf the Origin is to https://localhost:4200 in step 3, then you need to use the command ng serve -ssl to run and open the website via https://localhost:4200\n\nReferences\nhttps://learn.microsoft.com/en-us/dynamics365/marketing/developer/event-management-web-application\nhttps://learn.microsoft.com/en-us/dynamics365/marketing/developer/portal-hosted\nhttps://learn.microsoft.com/en-us/dynamics365/marketing/developer/self-hosted\n","thumbnail":"https://ichrisj.gitee.io/reslib/images/local-event-website-environment-for-Dynamics-Marketing/local-event-website-environment-for-Dynamics-Marketing.jpg","plink":"http://b.alphac.cn/2022/10/06/local-event-website-environment-for-Dynamics-Marketing/"},{"title":"Power Apps Portal中JSON type Web Template的使用","date":"2022-09-15T13:25:14.000Z","date_formatted":{"ll":"2022年9月15日","L":"2022/09/15","MM-DD":"09-15"},"updated":"2022-09-15T08:12:15.891Z","content":"随着Power Apps Portal的Web API功能的增加，用户可以灵活的使用它对数据进行CURD。但是如果开放某个entity的Web API在去获取数据的话，它没办法像List OData Feed根据某个View查询出来的结果返回数据，也很难用link-entity做一些数据过滤。List OData Feed的功能快要退役了，不用OData, 我们该如何实现这种类似的功能呢？来尝试一下JSON type Web Template吧\n\n\n创建一个 Web Template, 将MIME Type设值为application/json. 然后在Source中添加FetchXml和一些生成JSON数据的代码。可以参照下面的截图。\nContact JSON Web Template\n\n下面是Contact JSON web template的示例代码。该示例中用来获取所有的contact记录，这些contact记录对应的Account的名字中包含&quot;Corporation&quot;。如果有’jobtitle’的参数传入，会过滤有改jobtitle的contact记录。如果有结果，返回包含name, id 和 email的json数据；反之返回No data.\n12345678910111213141516171819202122232425262728293031323334353637&#123;% fetchxml contacts %&#125; &lt;fetch version=&quot;1.0&quot; output-format=&quot;xml-platform&quot; mapping=&quot;logical&quot; distinct=&quot;false&quot;&gt;   &lt;entity name=&quot;contact&quot;&gt;     &lt;attribute name=&quot;fullname&quot; /&gt;     &lt;attribute name=&quot;contactid&quot; /&gt;     &lt;attribute name=&quot;emailaddress1&quot; /&gt;     &lt;order attribute=&quot;fullname&quot; descending=&quot;false&quot; /&gt;     &#123;% if request.params[&#x27;jobtitle&#x27;] %&#125;     &lt;filter type=&quot;and&quot;&gt;       &lt;condition attribute=&quot;jobtitle&quot; operator=&quot;eq&quot; value=&quot;&#123;&#123;request.params[&#x27;jobtitle&#x27;]&#125;&#125;&quot; /&gt;     &lt;/filter&gt;     &#123;% endif %&#125;     &lt;link-entity name=&quot;account&quot; from=&quot;accountid&quot; to=&quot;parentcustomerid&quot; link-type=&quot;inner&quot; alias=&quot;ab&quot;&gt;       &lt;filter type=&quot;and&quot;&gt;         &lt;condition attribute=&quot;name&quot; operator=&quot;like&quot; value=&quot;%Corporation%&quot; /&gt;       &lt;/filter&gt;     &lt;/link-entity&gt;   &lt;/entity&gt; &lt;/fetch&gt; &#123;% endfetchxml %&#125; &#123;% if contacts.results.entities.size &gt; 0 %&#125; &#123;   &quot;values&quot;:   [     &#123;% for contact in contacts.results.entities %&#125;     &#123;       &quot;name&quot;:  &quot;&#123;&#123;contact.fullname&#125;&#125;&quot;,       &quot;id&quot;: &quot;&#123;&#123;contact.id&#125;&#125;&quot;,       &quot;email&quot;: &quot;&#123;&#123;contact.emailaddress1&#125;&#125;&quot;     &#125;     &#123;% unless forloop.last %&#125;,&#123;% endunless %&#125;     &#123;% endfor %&#125;   ] &#125; &#123;% else %&#125; No data. &#123;% endif %&#125;\n\n\n创建一个Page Template, 将上面创建的Contact JSON web template设置给Web Template字段。不要选中Use Website Header and Footer\nGet Contact JSON Page Template\n\n\n\n现在创建Web Page，并将Page Template字段设置成上面创建的Get Contact JSON page template, 并设置Partial URL, 这是之后获取json数据的URL.\nGet Contact JSON Web Page:\n\n\n\n给对应Entity创建Table Permission, 添加权限，并将其分配给相应的Web Role. 这样拥有改web role的Portal User就可以获取数据了。如图，示例中我们为contact entity创建的table permission并添加了全局Read的权限(Read权限就够了)\nContact - Global Access Table Permission\n\n\n\n我们来看看示例演示。这里我们将上面的table permission分配给Authenticated User web role. 我的CRM中有三条contact记录，她们对应的account的名字中包含&quot;Corporation&quot;。这三条记录中有俩条她们的jobtitle是Owner.\n\n当拥有Authenticated User web role的Portal User访问~/getcontactjson时\n\n如果在URL中添加参数，例如~/getcontactjson/?jobtitle=Owner\n\n如果是匿名访问~/getcontactjson\n\n这样我们就完全可以在Portal中的某些页面写JavaScript代码发送Ajax请求来获取该数据并做相应的逻辑处理。\n\n\n\n\n[!NOTE]\n在步骤3中，我们将Home作为Parent Page, 其实也可以只用其他页面作为Parent Page，但访问的URL也要做相应的调整。\n因为getcontactjson是web page，我们还可以通过添加Web Page Access Control Rule来控制是否限制某些Web Role的Portal User来访问\n\n\n谢谢！\n","thumbnail":"https://ichrisj.gitee.io/reslib/images/thumbnails/json-type-web-template-in-portals.jpg","plink":"http://b.alphac.cn/2022/09/15/json-type-web-template-in-portals/"},{"title":"Seamless sign in Portal with ADFS","date":"2022-09-15T12:52:56.375Z","date_formatted":{"ll":"2022年9月15日","L":"2022/09/15","MM-DD":"09-15"},"updated":"2022-09-15T04:52:56.375Z","content":"Starts from CRM Portal v8.0, all the Portal instances are online deployed (except one open source Portal). Portal also provides multiple entries from user to register/sign in it. That means domain users are also to sign in Portal. However, sometimes it’s annoying that every time we need to type our credentials to sign in the Portal even we are in the intranet. Whether we can implement seamless sign in Portal under an intranet?\nHere is one way: ADFS (WS-Federation)\nTo implement this, we need to add make some configurations on two parts: ADFS server and the Portal associated CRM org.\n\nNot include Employee Self Service Portal as it is only configured Azure AD to login\n\nADFS Server\nIn order to configure ADFS with Portal online, please make sure the ADFS is accessible from internet. That means we are able to access https://adfs.contoso.com/FederationMetadata/2007-06/FederationMetadata.xml and https://adfs.contoso.com/adfs/ls/idpinitiatedsignon.aspx.\nAfter that, let’s add some settings to AD FS Management tool.\nref: https://docs.microsoft.com/en-us/powerapps/maker/portals/configure/configure-ws-federation-settings#create-an-ad-fs-relying-party-trust\nCreate an AD FS relying party trust\nUsing the AD FS Management tool, go to Trust Relationships &gt; Relying Party Trusts.\n\nSelect Add Relying Party Trust.\nWelcome: Select Start.\nSelect Data Source: Select Enter data about the relying party manually, and then select Next.\nSpecify Display Name: Enter a name, and then select Next.\nExample: https://portal.contoso.com/\nChoose Profile: Select AD FS 2.0 profile, and then select Next.\nConfigure Certificate: Select Next.\nConfigure URL: Select the Enable support for the WS-Federation Passive protocol check box.\n\nRelying party WS-Federation Passive protocol URL: Enter https://portal.contoso.com/signin-federation\n\n\nNote: AD FS requires that the portal run on HTTPS.\n\nThe resulting endpoint has the following settings:\nEndpoint type: WS-Federation\n\nBinding: POST\nIndex: n/a (0)\nURL: https://portal.contoso.com/signin-federation\n\n\n\n\n\nConfigure Identities: Specify https://portal.contoso.com/, select Add, and then select Next.\nIf applicable, more identities can be added for each additional relying party portal. Users will be able to authenticate across any or all of the available identities.\nChoose Issuance Authorization Rules: Select Permit all users to access this relying party, and then select Next.\nReady to Add Trust: Select Next.\nSelect Close.\n\nAdd the Name ID claim to the relying party trust:\nTransformWindows account name to Name ID claim (Transform an Incoming Claim):\n\nIncoming claim type: Windows account name\nOutgoing claim type: Name ID\nOutgoing name ID format: Unspecified\nPass through all claim values\n\nPortal Management in CRM Org\nAfter the configurations on AD FS, we can add some Portal related settings on CRM.\nCreate AD FS related site settings\nGo to CRM &gt; Portals &gt; Site Settings, apply portal site settings referencing the above AD FS Relying Party Trust.\nref: https://docs.microsoft.com/en-us/powerapps/maker/portals/configure/configure-ws-federation-settings#create-ad-fs-site-settings\nA standard AD FS (STS) configuration only uses the following settings (with example values):\n\nAuthentication/WsFederation/ADFS/MetadataAddress - https://adfs.contoso.com/FederationMetadata/2007-06/FederationMetadata.xml\nAuthentication/WsFederation/ADFS/AuthenticationType - http://adfs.contoso.com/adfs/services/trust\n\nUse the value of the entityID attribute in the root element of the Federation Metadata (open the MetadataAddress URL in a browser that is the value of the above site setting)\n\n\nAuthentication/WsFederation/ADFS/Wtrealm - https://portal.contoso.com/\nAuthentication/WsFederation/ADFS/Wreply - https://portal.contoso.com/signin-federation\n\nAuto navigate to sign in page\nIn order to automatically navigate to the sign in after typing the Portal URL, we need to create an “Web Page Access Control Rule” record.\n\n\nName\nValue\n\n\n\n\nName\nA title used for reference. eg: “Grant Access to Authenticated Users”\n\n\nWebsite\nPortal website\n\n\nWeb Page\nHome\n\n\nRight\nRestrict Read\n\n\nScope\nExclude direct child web files\n\n\nWeb Roles\nAdd “Authenticated Users” web role\n\n\nSet ADFS as default log in entry\nAdd/update this site setting to make Portal set AD FS as default sign in channel. When we navigate to sign in page, it will automatically navigate the AD FS sign page, just like the ADFS button is clicked.\n\nAuthentication/Registration/LoginButtonAuthenticationType - http://adfs.contoso.com/adfs/services/trust\n\nAdditional\n\n\nWe need to add the AD FS url http://adfs.contoso.com as Local Intranet website in IE\n\nTo locate the Local intranet dialog box in Internet Explorer, click Tools, click Internet Options, click Security, and then click Local intranet.\n\n\n\nIn AD FS Management tool, make sure the “Windows Authentication” is ticked for Intranet.\n\nto find “Windows Authentication” in the AD FS Management tool, go to Authentication Policies &gt; Primary Authentication &gt; Global Setting &gt; Edit &gt; Intranet section\n\n\n\n","thumbnail":"https://ichrisj.gitee.io/reslib/images/thumbnails/pedro-lastra-Y9utglm0VpQ-unsplash.jpg","plink":"http://b.alphac.cn/2022/09/15/seamless-sign-in-portal-with-adfs/"},{"title":"算法题中归并的应用","date":"2022-09-15T12:52:56.374Z","date_formatted":{"ll":"2022年9月15日","L":"2022/09/15","MM-DD":"09-15"},"updated":"2022-09-15T04:52:56.374Z","content":"归并排序相信大家都很熟悉, 是比较常见的排序算法，其时间复杂度在O(nlogn)。那么我们在LeetCode刷题过程中，它会有哪些应用呢？\n归并排序\n首先，我们来回顾一下归并排序。其实归并排序主要就两个部分: 对数组的左右部分递归调用自己，然后对左右俩部分进行归并。熟悉二叉树遍历的同学肯定会发现，这就是二叉树的后续遍历。\n其实，归并的作用是使左右俩部分有序的数组变成一个完整的有序数组。也就是说，归并操作的前提条件是左右俩部分必须有序。\n1234567891011public void MergeSort(int[] arr, int left, int right)&#123;    if (left &gt;= right)        return;    int mid = left + ((right - left) &gt;&gt; 1);    MergeSort(arr, left, mid);    MergeSort(arr, mid + 1, right);    Merge(arr, left, mid, right);&#125;\n算法题应用\n那么，如果一些算法题中，如果数组的左右两部分已经有序了，是否这些题会更容易找到解法呢？\n数组中的逆序对📎\n\n在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组，求出这个数组中的逆序对的总数。\n\n示例 1:\n输入: [7,5,6,4]\n输出: 5\n\n\n限制：\n0 &lt;= 数组长度 &lt;= 50000\n\n\n我们先来两个数(小于两个数,就可以直接返回0了), 例如[7, 5]。其实，一看就知道这是一组逆序对，但让我们用归并排序的思想就分析一下。\n\n首先数组的左右俩部分都是有序的，因为各自就一个数。对于右边5来说，在左边从7到中间位置都比5大。那么从7到中间的位置，总共有1个数，则有一组逆序对。之后将[7, 5]排序。\n同理，对于[6, 4], 分析它们也是一组逆序对。然后排序。\n排完序后，数组变成[5, 7, 4, 6]。从右边部分开始看，对于4，在左边部分，因为5比4大，那么从5到中间的位置，都可以与4组成逆序对，那么有 mid + 1 - index 组逆序对，即 1 + 1 - 0 = 2 (这里左边部分不用从5开始向右一一遍历与4比较，因为这部分是有序的，肯定都不会小于5)；之后看6，因为左边的5小，则左边边向右移动到7，其比6大，则对于6来说，右边有 1 + 1 - 1 = 1个数可以它组成逆序对。右边部分遍历结束，归并排序将数组变有序。\n最后，我们就统计出总共有5组逆序对。\n\n注意：在merge排序到达过程中，如果某个位置左右两边的值相等，应先将左边的值先放入辅助数组中。如果先将右边的数放入辅助数组中，可能会造成结果变小。例如，左右两个分别是a, b(a == b)。如果此时a的下一位是c(c &gt; a)。如果先把a放入辅助数组，c还可以与b组成逆序对。但是如果b先放入辅助数组，那么c就不能与b组成逆序对，导致结果变小。\n\n1234567891011121314151617181920212223242526272829303132333435363738394041public int ReversePairs(int[] nums) &#123;    if(nums == null || nums.Length &lt; 2)        return 0;    return ReversePairs(nums, 0, nums.Length - 1);&#125;private int ReversePairs(int[] nums, int le, int ri)&#123;    if(le == ri)        return 0;    int mid = le + ((ri - le) &gt;&gt; 1);    return ReversePairs(nums, le, mid)         + ReversePairs(nums, mid + 1, ri)         + Merge(nums, le, mid, ri);        &#125;private int Merge(int[] nums, int le, int mid, int ri)&#123;    int[] aux = new int[ri - le + 1];    int i = 0; // 辅助数组中当前位置    int l = le, r = mid + 1; //nums数组中左右位置    int res = 0;    while(l &lt;= mid &amp;&amp; r &lt;= ri)     &#123;        // 如果左边l的值比右边r的值大，那么[l..mid]之间所有的数都比r位置的数大        // 那么左边就有mid - l + 1个数可以与r组成逆序对        res += nums[l] &gt; nums[r] ? (mid - l + 1) : 0;         aux[i++] = nums[l] &lt;= nums[r] ? nums[l++] : nums[r++];    &#125;    while(l &lt;= mid)        aux[i++] = nums[l++];    while(r &lt;= ri)        aux[i++] = nums[r++];    for(i = 0; i &lt; aux.Length; i++)        nums[le + i] = aux[i];    return res;&#125;\n计算右侧小于当前元素的个数📎\n\n给你一个整数数组nums，按要求返回一个新数组counts。数组counts有该性质：counts[i]的值是nums[i]右侧小于nums[i]的元素的数量。\n示例 1：\n\n输入：nums = [5, 2, 6, 1]\n输出：[2, 1, 1, 0]\n解释：\n5 的右侧有 2 个更小的元素 (2 和 1)\n2 的右侧仅有 1 个更小的元素 (1)\n6 的右侧有 1 个更小的元素 (1)\n1 的右侧有 0 个更小的元素\n\n\n\n我们还是从小范围看起，先看[5, 2]。首先左右俩边都是有序的，因为各自就一个数。对于左边的5，右边的2比其小。所以目前5右侧比其小的数量是1。2右边目前没数，所以答案是0。得到目前答案后，排序。\n同理，对于数组[6, 1], 6右边的1比其小，目前答案是1。1右边没数，答案是0。得到目前答案，排序。\n上面左右部分排完序之后数组是[2, 5, 1, 6]。此时设置两个指针l, r分别指向左边的5和右边的6。此时5&lt;6, r向左移动到1，此时 5&gt;1, 那么此时[mid + 1, r]之间的所有数都是小于5，满足要求的，即总共有 r - mid (2 - 1 = 1)个，加上之前的1个，5右边满足要求的数量是2个。之后，l向左移动到2，此时 2&gt;1, 满足要求，那么2右边有1个数满足要求。l继续左移，超出数组边界结束。\n至此，我们便得到数组[5, 2, 6, 1]的答案[2, 1, 1, 0]。\n但是，如何把答案填入返回数组对应位置上呢？因为数组nums是被排序的，每个值都可能会被移动的。其实，我们可以在用一个新的数组，这个数组的每个元素不但有原数组的元素的值，还携带元素的下标，这样在排序过程中，我们始终可以获取元素的原来下标，并将答案更新到返回数组中。(这里我懒得使用数组或创建一个对象去包含元素的值和下标，直接使用的C#中的元组了)\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758public class Solution &#123;    private int[] smaller;    public IList&lt;int&gt; CountSmaller(int[] nums)     &#123;        if(nums == null || nums.Length == 0)            return new List&lt;int&gt;();        smaller = new int[nums.Length];        (int, int)[] keyNums = new (int, int)[nums.Length]; //元组数组        for(int i = 0; i &lt; nums.Length; i++)            keyNums[i] = (nums[i], i); // 初始化元组，第一个是元素的值，第二个是下标        CountSmaller(keyNums, 0, nums.Length - 1);        return new List&lt;int&gt;(smaller);    &#125;    private void CountSmaller((int, int)[] keyNums, int le, int ri)    &#123;        if(le == ri)            return;                int mid = le + ((ri - le) &gt;&gt; 1);        CountSmaller(keyNums, le, mid);        CountSmaller(keyNums, mid + 1, ri);        Merge(keyNums, le, mid, ri);    &#125;    private void Merge((int, int)[] keyNums, int le, int mid, int ri)    &#123;        int l = mid, r = ri;        while(l &gt;= le &amp;&amp; r &gt; mid)        &#123;            // 如果nums[l] &lt;= nums[r]，不满足条件，r向左移动            if(keyNums[l].Item1 &lt;= keyNums[r].Item1)                r--;            else            &#123;                // 否则，[mid + 1， r]之间的数都满足要求，更新结果。l向左移。                smaller[keyNums[l].Item2] += r - mid;                l--;            &#125;        &#125;        (int, int)[] aux = new (int, int)[ri - le + 1];        int i = 0;        l = le;        r = mid + 1;        while(l &lt;= mid &amp;&amp; r &lt;= ri)            aux[i++] = keyNums[l].Item1 &lt;= keyNums[r].Item1 ? keyNums[l++] : keyNums[r++];        while(l &lt;= mid)            aux[i++] = keyNums[l++];        while(r &lt;= ri)            aux[i++] = keyNums[r++];                for(i = 0; i &lt; aux.Length; i++)            keyNums[i + le] = aux[i];    &#125;&#125;\n下面两题的分析逻辑基本上差不多，大家可以自己解答一下\n翻转对📎\n区间和的个数📎\n","thumbnail":"https://ichrisj.gitee.io/reslib/images/thumbnails/mohammad-alizade-CDu0x1Aiils-unsplash.jpg","plink":"http://b.alphac.cn/2022/09/15/merge-in-algorithm-problems/"},{"title":"Hello World","date":"2022-09-15T12:52:56.372Z","date_formatted":{"ll":"2022年9月15日","L":"2022/09/15","MM-DD":"09-15"},"updated":"2022-09-15T04:52:56.372Z","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick Start\nCreate a new post\n1$ hexo new &quot;My New Post&quot;\nMore info: Writing\nRun server\n1$ hexo server\nMore info: Server\nGenerate static files\n1$ hexo generate\nMore info: Generating\nDeploy to remote sites\n1$ hexo deploy\nMore info: Deployment\n","thumbnail":"https://ichrisj.gitee.io/reslib/images/thumbnails/photo-1517694712202-14dd9538aa97.jpg","plink":"http://b.alphac.cn/2022/09/15/hello-world/"},{"title":"Call External APIs within Power Apps Portal","date":"2022-09-15T12:52:56.371Z","date_formatted":{"ll":"2022年9月15日","L":"2022/09/15","MM-DD":"09-15"},"updated":"2022-09-15T06:41:31.748Z","content":"Think about this common scenario: You have a Power Apps Portal and want authenticated portal users to call some external APIs to retrieve/update data from outside instead of from the binding Dataverse instance. Previously, I would say there were lots of problems: how to make sure the APIs could be only called by authenticated users? How to secure the requests? How to fix CORS (Cross Origin Resource Sharing) issues? Now, it becomes easier, because Portal has OAuth 2.0 implicit grant flow feature and easily to integrate with Azure API Management service. Here I will do it step by step.\n1. Register an App on Azure\nCreate a App Registration on the Azure AD which under the same tenant where the Portal is hosted, then copy the Application ID.\n\nWhen a Power Apps Portal provisioned, there will be App Registration created. It’s OK to use this one if you don’t want to create new one.\n\n\n2. Create Site Settings\nNow we need to register client id with the portal for which the implicit grant flow is allowed. Go to the binding Dataverse environment, open the Portal Management app and create two Site Settings.\n\na. ImplicitGrantFlow/RegisteredClientId – The value is the copied Application ID.\nb. ImplicitGrantFlow/{ClientId}/RedirectUri – The {ClientId} is the copied Application ID. The value is the valid redirect URIs that are allowed for a specific client ID.\nref: https://docs.microsoft.com/en-us/powerapps/maker/portals/oauth-implicit-grant-flow#register-client-id-for-implicit-grant-flow\n\n3. Get Authentication Token\nNow if you sign in the Portal and access URL PortalURL/_services/auth/token?client_id=&#123;clientid&#125;, you will get a JWT (JSON Web Token).\nGo to jwt.io to decode the token, you can see the details the token carried. Please copy values of attributes aud (audience) and iss (issuer), we will use it later. Actually, the aud is application id and the iss is the portal url.\n4. Create an API on APIM\n\n(skip if you already have one)\n\nPlease follow this tutorial to create an API on APIM. It doesn’t require that APIM service should be in the same tenant as the portal.\n5. Validate JWT token config\nIn order to make sure the API can be called with the token from Portal, APIM provides you with &lt;validate-jwt&gt; policy that takes off majority of the effort related to JWT token validation.\nGo to the APIM and open the ‘Police code editor’ for the ‘Inbound processing’ of the API, and add the policy under &lt;inbound&gt; tag.\n 1234567891011 &lt;validate-jwt header-name=&quot;Authorization&quot; failed-validation-httpcode=&quot;401&quot; failed-validation-error-message=&quot;Unauthorized&quot; require-scheme=&quot;Bearer&quot; output-token-variable-name=&quot;securityToken&quot;&gt;    &lt;issuer-signing-keys&gt;        &lt;key n=&quot;&#123;modulus goes here&#125;&quot; e=&quot;&#123;exponent goes here&#125;&quot; /&gt;    &lt;/issuer-signing-keys&gt;    &lt;audiences&gt;        &lt;audience&gt;&#123;Application(Client) ID&#125;&lt;/audience&gt;    &lt;/audiences&gt;    &lt;issuers&gt;        &lt;issuer&gt;&#123;Portal URL, eg: xxx.powerappsportal.com&#125;&lt;/issuer&gt;    &lt;/issuers&gt;&lt;/validate-jwt&gt;\nNow we have a problem how to set the key. To get the key, please open PortalURL/_services/auth/publickey, copy the whole text and paste it to the key_encoded, then run the python code to get Modulus and Exponent and set them to the key’s attributes.\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647# Ensure the libraries below# pip install cryptography# pip install pycryptodomefrom Crypto.PublicKey import RSAimport base64from binascii import unhexlifyimport sysdef long_to_bytes (val):    &quot;&quot;&quot;    Use :ref:`string formatting` and :func:`~binascii.unhexlify` to    convert ``val``, a :func:`long`, to a byte :func:`str`.    :param long val: The value to pack    Using :ref:`string formatting` lets us use Python&#x27;s C innards.    &quot;&quot;&quot;    # one (1) hex digit per four (4) bits    width = val.bit_length()    # unhexlify wants an even multiple of eight (8) bits, but we don&#x27;t    # want more digits than we need (hence the ternary-ish &#x27;or&#x27;)    width += 8 - ((width % 8) or 8)    # format width specifier: four (4) bits per hex digit    fmt = &#x27;%%0%dx&#x27; % (width // 4)    # prepend zero (0) to the width, to zero-pad the output    s = unhexlify(fmt % val)    return skey_encoded = &quot;&quot;&quot;-----BEGIN PUBLIC KEY-----MI*************************************************************Gjn*************************************************************4hY*************************************************************2PG*************************************************************+tj*************************************************************KuG*************************************************************tqw*****B-----END PUBLIC KEY-----&quot;&quot;&quot;pubkey = RSA.importKey(key_encoded)print(&quot;Modulus:&quot;)print(base64.b64encode(long_to_bytes(pubkey.n)).decode() + &#x27;\\n&#x27;)print(&quot;Exponent:&quot;)print(base64.b64encode(long_to_bytes(pubkey.e)).decode())\nref: https://psempruch.medium.com/authorizing-powerapps-portal-calls-with-azure-api-management-8880c0bbd64d\n6. Fix CORS.\nAs the API is in a different domain, so if we try to call it from Portal website with JavaScript code, it will encounter the CORS issue. To fix it, please add a CORS policy to the API’s inbound policy. You can specify which origins, methods, etc are allowed to call the APIs. Here, I will set them to * to allow all.\n\nMake sure the &lt;base /&gt; is moved to the bottom of the Inbound.\n\n1234567891011121314151617181920&lt;inbound&gt;    &lt;validate-jwt &gt;    …    &lt;/validate-jwt&gt;    &lt;cors&gt;        &lt;allowed-origins&gt;            &lt;origin&gt;*&lt;/origin&gt;        &lt;/allowed-origins&gt;        &lt;allowed-methods&gt;            &lt;method&gt;*&lt;/method&gt;        &lt;/allowed-methods&gt;        &lt;allowed-headers&gt;            &lt;header&gt;*&lt;/header&gt;        &lt;/allowed-headers&gt;            &lt;expose-headers&gt;            &lt;header&gt;*&lt;/header&gt;        &lt;/expose-headers&gt;    &lt;/cors&gt;    &lt;base /&gt;&lt;/inbound&gt;\n7. Remove Subscription requirement\nIf you don’t want each API call needs to carry a subscript id in the header, please turn off the Subscription required.\n\n8. Test.\nNow everything is settle down, we are able to try to call the API in Portal with JavaScript code.\n\na. Create a Web Template and add JavaScript code to get token, then all the API. In order to make it simple, let’s use the sample code with little updates in the template source.\nref: https://docs.microsoft.com/en-us/powerapps/maker/portals/oauth-implicit-grant-flow#token-endpoint-sample\n\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495&lt;div id=&#x27;response&#x27;&gt;&lt;/div&gt;&lt;script&gt;/*    Portals - Implicit Grant Sample       Token Endpoint    Description:        * getAuthenticationToken function is used to fetch an ID token using the Token endpoint in Portals.        * getAuthenticationToken is added to window.auth using an IIFE.        * After the IIFE gets executed, the token can be fetched anytime using window.auth.getAuthenticationToken(callback);        * getAuthenticationToken accepts a callback function to handle the token returned from Portals.        * Token is returned only for authenticated users.        * ImplicitGrantForceLogin cookie key is used to decide whether or not to redirect user to login page based on the Token endpoint&#x27;s response.*/// Part 1: Add getAuthenticationToken to window.auth(function (auth, $) &#123;    &quot;use strict&quot;;    var callback = null    //Force Login for Anonymous users. Below line can be commented if force login is not needed.    //$.cookie(&quot;ImplicitGrantForceLogin&quot;, 1);      let clientId = &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;; //Add the Client ID registered on CRM.    auth.getAuthenticationToken = function (callbackFn) &#123;        callback = callbackFn;               $.ajax(&#123;            type: &#x27;GET&#x27;,            url: `/_services/auth/token?client_id=$&#123;clientId&#125;`,            cache: false,            success: handleGetAuthenticationTokenSuccess,            error: jqXHR =&gt; callback(null, jqXHR)        &#125;);    &#125;    function handleGetAuthenticationTokenSuccess(data, status, jqXHR) &#123;        var jsonResult = JSON.parse(jqXHR.getResponseHeader(&#x27;X-Responded-JSON&#x27;));        if (jsonResult &amp;&amp; jsonResult.status == 401) &#123;            var forceLogin = Number($.cookie(&quot;ImplicitGrantForceLogin&quot;)) === 1;            if (forceLogin) &#123;                // If the user is not logged in, redirect to login page                redirectToLogin();            &#125; else &#123;                callback(null,jsonResult); //Run callback method with error message            &#125;        &#125; else &#123;            // Pass the token to the callback function            callback(data);        &#125;    &#125;    function redirectToLogin() &#123;        var redirectUrl = window.location;        var loginUrl = window.location.origin + &#x27;/SignIn?returnUrl=&#x27; + encodeURIComponent(redirectUrl);        window.location = loginUrl;    &#125;&#125;(window.auth || (window.auth = &#123;&#125;), window.jQuery));// Part 2: Define Callback function and call window.auth.getAuthenticationToken to fetch the token.var callbackFn = function(data, err) &#123;    if(data) &#123;        $.ajax(&#123;            url: &#x27;https://xxxx.azure-api.net/sessions&#x27;, // The API hosted on APIM            type: &#x27;GET&#x27;,            headers: &#123;                &#x27;Authorization&#x27;: `Bearer $&#123;data&#125;` // The token from /_services/auth/token?client_id=$&#123;clientId&#125;            &#125;,            success: function (result) &#123;               $(&quot;#response&quot;).text(JSON.stringify(result)); // The returned data.            &#125;,            error: function (error) &#123;                $(&quot;#response&quot;).text(error.statusText);            &#125;        &#125;);    &#125;    else &#123;        console.log(&quot;Error&quot;);        if(err)&#123;            // 401 is returned for anonymous users.            if(err.status == 401)&#123;                console.log(&quot;Login required&quot;);            &#125;            // To handle any other error            else&#123;                console.log(err.responseJSON.ErrorId + &quot; : &quot; + err.responseJSON.ErrorMessage);            &#125;        &#125;    &#125;&#125; // Fetch Token Callwindow.auth.getAuthenticationToken(callbackFn);&lt;/script&gt;\n\nb. Create a Page Template for the above Web Template, then create a Web Page for the Page Template.\nc. At last, try to open the Web Page from Portal website. Without login, nothing will be returned. After login, the data will display on Portal directly.\n\n\n","thumbnail":"https://ichrisj.gitee.io/reslib/images/thumbnails/photo-1578503995198-743266f741c5.jpg","plink":"http://b.alphac.cn/2022/09/15/call-external-apis-within-power-apps-portals/"},{"title":"Manacher算法及应用","date":"2022-01-04T22:13:25.000Z","date_formatted":{"ll":"2022年1月4日","L":"2022/01/04","MM-DD":"01-04"},"updated":"2022-09-15T04:52:56.374Z","content":"回文串(palindrome string)是算法题中比较常见的类型。根据回文的定义我们知道它是轴对称的，所以判断一个字符串是不是回文很容易，我们只需要从字符串的两头向中间遍历，只有两侧一直相等才是回文，哪怕一次两侧不相等都不是回文。\n中心扩展\n那怎么在一个字符串中找出其中的回文子串呢？貌似也不是很难，我们只需要在每个字符上向两侧扩展，直到两侧不相等就停下来，这样就得到了一个回文子串了。这个方式没错，但是会有遗漏。因为回文串的中轴可能是某个字符，也可能在两个字符中间。例如：“aba&quot;就是以’b’位中轴的回文串；而&quot;abba&quot;却是以&quot;bb&quot;中间为轴的回文，这样的中轴是虚轴。\n这样虚中轴的回文子串应该怎么找呢？其实根上面原理一样，只是需要把中轴由虚变实。我们把所有字符中间插入一个同样的占位符(包括左右两侧)，比如用’#'，则&quot;abba&quot;就变了成”#a#b#b#a#&quot;，那么以最中间的’#'为中轴，就可以找出它是一个回文串。\n\n此时你会发现&quot;abba&quot;的长度是4，而&quot;#a#b#b#a#“的长度是9，那么我只需统计”#a#b#b#a#&quot;半径，就可以s算出&quot;abba&quot;真实的长度。例如以中间’#'向左右两边的距离都是5，那么再减一就是真实长度4。\n同样对于&quot;aba&quot;, 加入占位符后为&quot;#a#b#a#&quot;，中间’b’到左右两边的距离都是4，再减一就是真实长度3。\n\nManacher算法\n好了，现在我们知道如何找出一个字符串中的回文子串，但是之前的方式好像还是不够好？我们需要在字符串的每个位置停下来，然后向两边扩展，找出以此字符为中轴的回文子串，那么最坏的情况是以字符串的中间字符为中轴一直扩展到两边，扩展就要花费O(n)的时间，加上遍历字符串的时间，那么这个方式的时间复杂度就是O(n²)。\n如何才能降低其时间复杂度呢？我们来看看这种情况：\n\n假设在某个时刻遍历到i的位置，c是i之前的某个位置，在c位置发现的回文串的右边界最远，假设为R，对称的左边界是L。假设i'是i以c为中心的对称位置。因为已经遍历到i位置了，所以我们肯定直到i'和c位置回文子串的情况。i'的回文子串长度为Di'，i的回文子串的长度是Di。\n\n\n如果i'的回文子串在[L...R]内，那么Di和Di'会是什么关系呢？\n\nDi和Di'肯定是相等的，并且i 和i'的回文子串肯定也是以c为中心轴对称的。因为[L...R]内的字符都是以c为中心的轴对称，i 和i'是以c为中心的对称，那么它俩各自的回文子串也不例外。例如:\n\n\n\n如果i'的回文子串左侧一部分在[L...R]外呢？\n\n\n根据上面的分析，因为轴对称，首先我们可以确认[L ... i' + i' - L]与[i - (R - i) ... R]部分应该是轴对称，所以相等的。那么有没有可能R + 1与L - 1位置的字符相等呢？\n答案是没有可能。因为R + 1与L - 1位置是以c为中心堆成，如果R + 1与L - 1位置字符相同，那么以c为中心的回文串应该是[L-1 ... R + 1]。\n那么有没有可能[i - (R - i) ... R] 左右外侧（即i - (R - i) -1与R + 1）的字符对称相等呢？\n也是不可能。如果相等，因为c为中心对称，那么i - (R - i) -1与i' + i' - L + 1是相等的。又由于i'的回文子串，L - 1与i' + i' - L + 1相等，那么L - 1与i - (R - i) -1相等，那么与R + 1也相等了，那么以c为中心的回文串又是[L-1 ... R + 1]了。\n所以以i为中心的回文子串是[i - (R - i) ... R]。例如：\n\n\n\n\n如果i'的回文子串左边界正好在L上呢？\n\n此时我们可以确认以i' 的回文子串的范围是[L ... i' + i' - L]。与之对应，[i - (R - i) ... R]部分满足以i为中心的回文子串。那此处的回文字符串会不会更宽呢？\n这个是有可能的。因为R + 1与i - (R - i) -1相等，i - (R - i) -1与i' + i' - L + 1相等，那么R + 1与i' + i' - L + 1相等。但是i' + i' - L + 1与L - 1位置字符不相等，所以R + 1与L - 1不相等，不影响之前的假设。所以在此种情况下，需要尝试再向两边扩展。但是[i - (R - i) ... R]不需要在计算的，这部分已经满足要求了。例如：\n\n\n\n但是没有之前的假设情况怎么办？i在R的右端怎么办呢？回到原来朴素的方式去查找回文子串，然后将此时的i设为c，它的右边界设为R, i跳到下一步，看看是否满足上面的条件，满足则以上面的情况查找，不满足，继续此朴素查找。\n\n\n代码\n我们将上述两点融合在算法中.\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647// 计算字符串中最长的回文字串的长度public int MaxLCPSLength(string str)&#123;    if (str == null || str.Length == 0)        return 0;    char[] manacherStr = ManacherChars(str);    int[] diameters = new int[manacherStr.Length]; // 以每个字符为中心的回文字串的长度    int center = -1; // 当前到达最右边界回文子串的中心下标    int right_border = -1; // 当前最右回文子串右边界下标    int maxLen = int.MinValue; // 记录最长回文子串的长度    for (int i = 0; i &lt; manacherStr.Length; i++)    &#123;        // 如果 i 大于等于右边界, 则 i 位置中心子串的默认长度为1. 之后需要两边扩展.        // 如果 i 在右边界左侧, 则先算 i&#x27; 位置子串长度:        // - 如果在[L..R]内, 那么 i&#x27; 位置子串长度肯定小于 right_border - i        // - 否则, i&#x27; 位置子串长度肯定不小于 right_border - i.        diameters[i] = right_border &gt; i ? Math.Min(right_border - i, diameters[2 * center - i]) : 1;        // 为了减少代码量, 不管 i 位置子串长度如何, 都尝试去两边扩展. 如果第一次扩展失败, 说明不用扩展了,直接跳出.        // 如果扩展成功,则继续扩展, 直到失败.        while (i + diameters[i] &lt; manacherStr.Length &amp;&amp; i - diameters[i] &gt;= 0)        &#123;            if (manacherStr[i + diameters[i]] == manacherStr[i - diameters[i]])                diameters[i]++;            else                break;        &#125;        // 如果计算出 i 位置子串右边界已经超过原有的右边界, 则更新最右边界和中心点.        if (i + diameters[i] &gt; right_border)        &#123;            right_border = i + diameters[i];            center = i;        &#125;        maxLen = Math.Max(maxLen, diameters[i]);    &#125;    return maxLen - 1;&#125;// 经字符串中插入占位符private char[] ManacherChars(string str)&#123;    char[] res = new char[2 * str.Length + 1];    for (int i = 0; i &lt; res.Length; i++)        res[i] = i % 2 == 0 ? &#x27;#&#x27; : str[i / 2];    return res;&#125;\n算法中的应用\nTo be continued…\n","thumbnail":"https://ichrisj.gitee.io/reslib/images/thumbnails/snow%20trees%20on%20trail.jpg","plink":"http://b.alphac.cn/2022/01/04/manacher-algo/"},{"title":"浅谈KMP算法","date":"2021-12-27T16:35:13.000Z","date_formatted":{"ll":"2021年12月27日","L":"2021/12/27","MM-DD":"12-27"},"updated":"2022-09-15T04:52:56.372Z","content":"字符串匹配是计算机中比较基本的操作。暴力的做法就是将两个字符串str和pattern从0位置开始匹配，如果中间有字符不匹配，则str跳回开始位置的下一位，即1位置，pattern跳回0位置，两者再继续匹配。依此类推，如果pattern上所有字符在str的某个位置开始后都能匹配上，那么则找到了一个匹配的位置；如果str到达结束的位置都没有找到找个位置，那么str上就没有匹配pattern的位置。\n这个方法的算法复杂度是O(n*m)(str和pattern长度分别是n,m，其中n&gt;=m), 是效率比较低的。那么更高效的方法是什么呢？其中之一是KMP算法(Knuth–Morris–Pratt algorithm)，它可以把时间复杂度降到O(n+m)，即O(n)。\nKMP算法逻辑\n很多效率高的算法都是用空间换时间，KMP算法也是。它会对pattern字符串生成一个next数组。next数组存储了pattern中前缀等于后缀的最大的长度。\n当str和pattern在匹配过程中的某个时刻str[i]和pattern[j]不相等，pattern不一定要跳回到0位置，而是在next数组中查出跳回到哪个位置后，继续与str[i]匹配。\nnext数组的计算\nnext数组是针对pattern字符串的, 其中next[i]是指pattern[0...i-1]之间前缀等于后缀的最大长度，但是不可以是i。例如，pattern中前i个字符是&quot;abbacabba&quot;, 那我们看看它的前缀和后缀：\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n长度\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n前缀\na\nab\nabb\nabba\nabbac\nabbaca\nabbacab\nabbacabb\n\n\n后缀\na\nba\nbba\nabba\ncabba\nacabba\nbacabba\nbbacabba\n\n\n相等?\n✔️\n❌\n❌\n✔️\n❌\n❌\n❌\n❌\n\n\n所以这里next[i] = 4。⚠️注意：不可以计算这个&quot;abbacabba&quot;，因为其长度是i。如果计算了那么前缀和后缀永远是一样的。\n那么生成next数组的代码如何表达呢？\n\n对于pattern字符串的0位置，它前面没有任何字符，这里人为设next[0] = -1。\n对于1位置，它前面就一个字符，没法算前缀和后缀，这里也人为设next[1] = 0.\n对i位置，我们先假设cn = next[i-1]，根据next数组的定义可以知道pattern[0...i-2]中前缀和后缀相等的最大长度是cn，即pattern[0...cn-1] == pattern[i-cn-1...i-2]。此时，如果:\n\npattern[cn] == pattern[i-1], 那么next[i] = cn + 1， i和cn都可以右移继续比较去计算next[i+1]了。\npattern[cn] != pattern[i-1], 那么获取cn位置的next[cn]的值，假设是cn'。那么就有pattern[0...cn'-1] == pattern[cn-cn'...cn-1]；因为之前说去pattern[0...cn-1] == pattern[i-cn-1...i-2]，那么pattern[i-cn-1...i-2]肯定也存在一个cn'长度使得pattern[i-cn-1...i-cn-1+(cn'-1)] == pattern[i-2-(cn'-1)...i-2],那么也就有pattern[0...cn'-1] == pattern[i-2-(cn'-1)...i-2]。此时回到第一步的逻辑，如果pattern[cn'] == pattern[i-1], 则next[i] = cn' + 1，i和cn'右移；如果pattern[cn'] ！= pattern[i-1]，继续第二步的逻辑，获取cn'位置的next[cn']的值，一直向前找满足要求的cn。\n但是，如果cn已经跳到0位置了，退无可退了，那么next[i] == 0，即i位置没有满足要求的前缀和后缀。\n\n\n\n例如pattern = “abcabdabcabf” (这里就每一步都分析了):\n\nnext数组的0 1位置的值是固定的。\n对于index = 6，因为它的前一位next[5] == 2，即pattern[0..1] == pattern[3..4], 但pattern[2] != pattern[5], 那么查找next[2] == 0，但pattern[0] != pattern[5]。那么继续找next[0],此时已经是0位置了，那么next[6] = 0；\n当index = 11时，它的前一位next[10] == 4, 即pattern[0..3] == pattern[6..9], 此时pattern[4] != pattern[10]，那么next[11] = 5;\n\n\n12345678910111213141516171819202122private int[] NextArray(string pattern)&#123;    if (pattern.Length == 1)        return new int[] &#123; -1 &#125;;    int[] next = new int[pattern.Length];    next[0] = -1;    next[1] = 0;    int i = 2;    int cn = 0; //当前与i-1位置字符比较的位置    while (i &lt; next.Length)    &#123;        if (pattern[i - 1] == pattern[cn])            next[i++] = ++cn;        else if (cn &gt; 0)            cn = next[cn];        else            next[i++] = 0;    &#125;    return next;&#125;\nKMP匹配过程\n现在next数组已经生成好了，那么如果用匹配字符串呢？\n\n首先str和pattern字符串都是从0位置出发进行一一匹配。\n假设str和pattern分别在i, j位置时不相等，去next数组查找next[j]的值，假设是j'。此时让str[i]与next[j']比较：\n\n如果相等，str和pattern的i, j'各自右移，继续下一步的比较；\n如果不等，next数组中查找next[j']，继续与str[i]比较，如此反复；\n如果此时next[j'] == -1，即查找到达pattern[0]了还是没找到, 那么就str就从i+1位置开始重新与pattern匹配\n\n\n如果j到达了pattern右端，说明完全匹配成功了，str上的位置就是i-j。如果i先到达str的右端，就是没有匹配成功。\n\n例如对于str = “abcabdabcabef”, pattern = “abcabdabcabf”。由上我们可以计算出next数组是[-1, 0, 0, 0, 1, 2, 0, 1, 2, 3, 4, 5]。那么当str和pattern匹配到index=11是str[11] = 'e', pattern[11] = 'f'，那么在next数组中查得next[11] == 5, 我们发现pattern[0...4](长度是5)和str[11]之前的5个字符完全相等。那么我只需要比较str[11]与pattern[5]是否相等，如果相等，继续向右匹配，不用跳回到起点再匹配了。\n这里str[11] != pattern[5]，再从next数组查得next[5] == 2。同样，pattern[0...1]与str[11]之前的2个字符完全相等，那么比较str[11]与pattern[2]是否相等, 以此类推, 直到next[0] == -1，说明pattern中没有字符能满足匹配条件与str[11]匹配上，那么只能从str[11]的下一位重新开始匹配。\n\n1234567891011121314151617181920212223public int KMPMatch(string str, string pattern)&#123;    if (str == null || str.Length == 0 || pattern == null || pattern.Length == 0 || str.Length &lt; pattern.Length)        return -1;    int[] next = NextArray(pattern); // O(M) m &lt;= n;    int i = 0, j = 0;    while (i &lt; str.Length &amp;&amp; j &lt; pattern.Length)    &#123;        if (str[i] == pattern[j])        &#123;            i++;            j++;        &#125;        else if (next[j] == -1) // j == 0            i++;        else            j = next[j];    &#125;    return j == pattern.Length ? i - j : -1;&#125;\n","thumbnail":"https://ichrisj.gitee.io/reslib/images/thumbnails/photo-1436699005328-ac3965e80aa7.jpg","plink":"http://b.alphac.cn/2021/12/27/kmp-algo/"},{"title":"配置多个Git账号","date":"2021-12-25T14:36:09.000Z","date_formatted":{"ll":"2021年12月25日","L":"2021/12/25","MM-DD":"12-25"},"updated":"2022-09-15T04:52:56.372Z","content":"程序员同学在平时工作和学习过程中经常会遇到, 自己有多个git账号, 有的是工作的有的个人学习用的, 后者自己有多个git账号分别在不同平台,如github, gitee, bitbucket等等. 但电脑就一台, 那如何快捷有效的使用这个账号在不同的项目中去提交代码呢? 我们可以配置SSH key.\n清除git全局配置\n如果之前通过git命令设置过全局的user.name和user.email, 首先我们需要把它删除掉.\n12git config --global user.name &quot;your_name&quot;git config --global user.email  &quot;your_email&quot;\n如果不清楚自己之前是否设置过, 可以通过这个命令去检查一下. 并用下面的命令去删除.\n123456# 查看全局配置git config --global --list# 删除全局配置的用户名git config --global --unset user.name# 删除全局配置的邮箱git config --global --unset user.email\n\n其实这些配置数据, 如果没有特别设置路径, 默认是存在C:\\Users\\&lt;user_name&gt;\\.gitconfig (Windows系统), 所有可以找到这个文件, 然后用notepad打开之间修改保存.\n配置SSH Keys\n生成SSH Keys\n首先需要去生成SSH Keys, 先去C:\\Users\\&lt;user_name&gt;\\.ssh文件夹. 如果路径下没有.ssh文件夹, 可以创建一个。然后在命令行中用ssh-keygen -t rsa -C &quot;new email&quot;去生成key的两个文件，分别是公钥和私钥。其中.pub是公钥。\n\n私钥文件添加到SSH Agent\n默认ssh-agent只会读取id_rsa文件，为了让它识别我们新生成的私钥，需要用ssh-add将这些私钥添加到ssh-agent中。\n\n\n\n添加时如果出现 Could not open a connection to your authentication agent 错误，请先运行ssh-agent bash命令，之后在添加。\n如果运行ssh-agent bash是出现  unable to start ssh-agent service, error :1058, 请检查  OpenSSH Authentication Agent 服务，确保其是运行状态。ref: https://stackoverflow.com/questions/52113738/starting-ssh-agent-on-windows-10-fails-unable-to-start-ssh-agent-service-erro\n\n\n配置config文件\n之后，我们需要配置config文件。请看.ssh路径下是否有该文件，如果没有创建一个。然后可以仿照下面的内容去填写相应的你的config配置。\n1234567891011# Default github Host github.com    HostName github.com    User &quot;&lt;user_name&gt;&quot;    IdentityFile ~/.ssh/id_rsa_github# giteeHost gitee.com    HostName gitee.com    User &quot;&lt;user_name&gt;&quot;    IdentityFile ~/.ssh/id_rsa_gitee\n添加公钥到Git系统\n基本上所有支持git的网站都会有添加SSH Key的地方，例如github是在https://github.com/settings/keys。添加新的ssh key， 并将之前生成相应的.pub文件中的内容复制过去。\n测试配置\n最后，我们就可以用ssh -T命令去测试是否配置成功。\n\n之后，有新的git账号，可以按同样的步骤，添加设置新的账号。千万不要为git配置全局的user.name和user.email。我们只需要在不同的repository设置本地的user.name和user.email。\n12git config user.name &quot;your_name&quot;git config user.email  &quot;your_email&quot;\n","thumbnail":"https://ichrisj.gitee.io/reslib/images/thumbnails/yancy-min-842ofHC6MaI-unsplash.jpg","plink":"http://b.alphac.cn/2021/12/25/configure-multiple-git-accounts/"}]